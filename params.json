{"name":"Sparql-client","tagline":"SPARQL client for Ruby.","body":"#SPARQL Client for RDF.rb\r\n\r\nThis is a [Ruby][] implementation of a [SPARQL][] client for [RDF.rb][].\r\n\r\n* <http://ruby-rdf.github.com/sparql-client/>\r\n\r\n[![Gem Version](https://badge.fury.io/rb/sparql-client.png)](http://badge.fury.io/rb/sparql-client)\r\n[![Build Status](https://travis-ci.org/ruby-rdf/sparql-client.png?branch=master)](http://travis-ci.org/ruby-rdf/sparql-client)\r\n\r\n##Features\r\n\r\n* Executes queries against any SPARQL 1.0/1.1-compatible endpoint over HTTP,\r\n  or against an `RDF::Queryable` instance, using the `SPARQL` gem.\r\n* Provides a query builder [DSL][] for `ASK`, `SELECT`, `DESCRIBE` and\r\n  `CONSTRUCT` queries.\r\n* Includes preliminary support for some SPARQL 1.1 Update operations.\r\n* Supports tuple result sets in both XML, JSON, CSV and TSV formats, with JSON being\r\n  the preferred default for content-negotiation purposes.\r\n* Supports graph results in any RDF serialization format understood by RDF.rb.\r\n* Returns results using the [RDF.rb object model][RDF.rb model].\r\n* Supports accessing endpoints as read-only [`RDF::Repository`][RDF::Repository]\r\n  instances.\r\n\r\n##Examples\r\n\r\n### Querying a remote SPARQL endpoint\r\n    require 'sparql/client'\r\n\r\n    sparql = SPARQL::Client.new(\"http://dbpedia.org/sparql\")\r\n\r\n### Querying a `RDF::Repository` instance\r\n\r\n    require 'rdf/trig'\r\n    repository = RDF::Repository.load(\"http://example/dataset.trig\")\r\n\r\n    sparql = SPARQL::Client.new(repository)\r\n\r\n### Executing a boolean query and outputting the result\r\n\r\n    # ASK WHERE { ?s ?p ?o }\r\n    result = sparql.ask.whether([:s, :p, :o]).true?\r\n\r\n    puts result.inspect   #=> true or false\r\n\r\n### Executing a tuple query and iterating over the returned solutions\r\n\r\n    # SELECT * WHERE { ?s ?p ?o } OFFSET 100 LIMIT 10\r\n    query = sparql.select.where([:s, :p, :o]).offset(100).limit(10)\r\n\r\n    query.each_solution do |solution|\r\n      puts solution.inspect\r\n    end\r\n\r\n### Executing a graph query and iterating over the returned statements\r\n\r\n    # CONSTRUCT { ?s ?p ?o } WHERE { ?s ?p ?o } LIMIT 10\r\n    query = sparql.construct([:s, :p, :o]).where([:s, :p, :o]).limit(10)\r\n\r\n    query.each_statement do |statement|\r\n      puts statement.inspect\r\n    end\r\n\r\n### Executing an arbitrary textual SPARQL query string\r\n\r\n    result = sparql.query(\"ASK WHERE { ?s ?p ?o }\")\r\n\r\n    puts result.inspect   #=> true or false\r\n\r\n##Documentation\r\n\r\n* {SPARQL::Client}\r\n  * {SPARQL::Client::Query}\r\n  * {SPARQL::Client::Repository}\r\n\r\n##Dependencies\r\n\r\n* [Ruby](http://ruby-lang.org/) (>= 1.9.3)\r\n* [RDF.rb](http://rubygems.org/gems/rdf) (>= 1.1)\r\n* [Net::HTTP::Persistent](http://rubygems.org/gems/net-http-persistent) (>= 1.4)\r\n* Soft dependency on [SPARQL](http://rubygems.org/gems/sparql) (>= 1.1)\r\n\r\n##Installation\r\n\r\nThe recommended installation method is via [RubyGems](http://rubygems.org/).\r\nTo install the latest official release of the `SPARQL::Client` gem, do:\r\n\r\n    % [sudo] gem install sparql-client\r\n\r\n##Download\r\n\r\nTo get a local working copy of the development repository, do:\r\n\r\n    % git clone git://github.com/ruby-rdf/sparql-client.git\r\n\r\nAlternatively, download the latest development version as a tarball as\r\nfollows:\r\n\r\n    % wget http://github.com/ruby-rdf/sparql-client/tarball/master\r\n\r\n##Mailing List\r\n\r\n* <http://lists.w3.org/Archives/Public/public-rdf-ruby/>\r\n\r\n##Authors\r\n\r\n* [Arto Bendiken](http://github.com/bendiken) - <http://ar.to/>\r\n* [Ben Lavender](http://github.com/bhuga) - <http://bhuga.net/>\r\n* [Gregg Kellogg](http://github.com/gkellogg) - <http://greggkellogg.net/>\r\n\r\n##Contributors\r\n\r\n* [Christoph Badura](http://github.com/b4d) - <http://github.com/b4d>\r\n* [James Hetherington](http://github.com/jamespjh) - <http://twitter.com/jamespjh>\r\n* [Gabriel Horner](http://github.com/cldwalker) - <http://tagaholic.me/>\r\n* [Nicholas Humfrey](http://github.com/njh) - <http://www.aelius.com/njh/>\r\n* [Fumihiro Kato](http://github.com/fumi) - <http://fumi.me/>\r\n* [David Nielsen](http://github.com/drankard) - <http://github.com/drankard>\r\n* [Thamaraiselvan Poomalai](http://github.com/selvan) - <http://softonaut.blogspot.com/>\r\n* [Michael Sokol](http://github.com/mikaa123) - <http://sokolmichael.com/>\r\n* [Yves Raimond](http://github.com/moustaki) - <http://moustaki.org/>\r\n* [Thomas Feron](http://github.com/thoferon) - <http://github.com/thoferon>\r\n\r\n##Contributing\r\nThis repository uses [Git Flow](https://github.com/nvie/gitflow) to mange development and release activity. All submissions _must_ be on a feature branch based on the _develop_ branch to ease staging and integration.\r\n\r\n* Do your best to adhere to the existing coding conventions and idioms.\r\n* Don't use hard tabs, and don't leave trailing whitespace on any line.\r\n* Do document every method you add using [YARD][] annotations. Read the\r\n  [tutorial][YARD-GS] or just look at the existing code for examples.\r\n* Don't touch the `.gemspec`, `VERSION` or `AUTHORS` files. If you need to\r\n  change them, do so on your private branch only.\r\n* Do feel free to add yourself to the `CREDITS` file and the corresponding\r\n  list in the the `README`. Alphabetical order applies.\r\n* Do note that in order for us to merge any non-trivial changes (as a rule\r\n  of thumb, additions larger than about 15 lines of code), we need an\r\n  explicit [public domain dedication][PDD] on record from you.\r\n\r\n##Resources\r\n\r\n* <http://ruby-rdf.github.com/sparql-client/>\r\n* <http://github.com/ruby-rdf/sparql-client>\r\n* <http://rubygems.org/gems/sparql-client>\r\n* <http://rubyforge.org/projects/sparql/>\r\n* <http://raa.ruby-lang.org/project/sparql-client/>\r\n* <http://www.ohloh.net/p/rdf>\r\n\r\n##License\r\n\r\nThis is free and unencumbered public domain software. For more information,\r\nsee <http://unlicense.org/> or the accompanying {file:UNLICENSE} file.\r\n\r\n[Ruby]:            http://ruby-lang.org/\r\n[RDF]:             http://www.w3.org/RDF/\r\n[SPARQL]:          http://en.wikipedia.org/wiki/SPARQL\r\n[SPARQL JSON]:     http://www.w3.org/TR/rdf-sparql-json-res/\r\n[RDF.rb]:          http://rubygems.org/gems/rdf\r\n[RDF.rb model]:    http://blog.datagraph.org/2010/03/rdf-for-ruby\r\n[RDF::Repository]: http://rubydoc.info/github/ruby-rdf/rdf/RDF/Repository\r\n[DSL]:             http://en.wikipedia.org/wiki/Domain-specific_language\r\n                   \"domain-specific language\"\r\n[YARD]:            http://yardoc.org/\r\n[YARD-GS]:         http://rubydoc.info/docs/yard/file/docs/GettingStarted.md\r\n[PDD]:             http://unlicense.org/#unlicensing-contributions\r\n[Backports]:       http://rubygems.org/gems/backports\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}